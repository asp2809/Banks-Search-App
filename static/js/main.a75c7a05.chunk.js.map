{"version":3,"sources":["components/Dropdown/index.js","components/SelectField/SelectField.js","components/SearchField/SearchField.js","components/Table/Table.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","Wrapper","styled","div","CustomDropdown","propTypes","defaultProps","CustomDropdownMenu","Menu","Cities","SelectField","props","React","useState","searchQuery","setSearchQuery","onSelect","eventKey","Toggle","btnStyle","MenuWrapper","className","onSubmit","e","preventDefault","changeHandler","type","placeholder","onChange","target","value","map","city","key","SearchField","TableWrapper","Table","loading","restOfProps","data","bankDetails","banks","forEach","bank","favBanks","filter","el","ifsc","length","onClick","favBanksHandler","processData","columns","Header","accessor","defaultPageSize","showPaginationBottom","blinkCaret","keyframes","fontFamily","active","api","setup","baseURL","cache","maxAge","exclude","query","Landing","state","filteredBanks","selectQuery","activeTab","componentDidMount","get","then","res","setState","JSON","parse","localStorage","getItem","catch","err","toast","error","position","POSITION","TOP_RIGHT","queryCheckHandler","toLowerCase","startsWith","String","bank_id","branch","address","district","bank_name","searchChangeHandler","lowerCaseQuery","selectChangeHandler","option","toUpperCase","console","log","fav","favorite","setItem","stringify","switchTabHandler","tab","tableToShow","this","Component","configure","autoClose","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a75c7a05.chunk.js","sourcesContent":["import \"@trendmicro/react-dropdown/dist/react-dropdown.css\";\r\nimport Dropdown from \"@trendmicro/react-dropdown\";\r\nimport \"../Buttons\";\r\n\r\nexport default Dropdown;\r\nexport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownMenuWrapper,\r\n  MenuItem,\r\n  DropdownButton\r\n} from \"@trendmicro/react-dropdown\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Dropdown, { MenuItem } from \"../Dropdown\";\r\n\r\nconst Wrapper = styled.div`\r\n  form {\r\n    margin: 1rem;\r\n    input {\r\n      padding: 0.7rem 1rem;\r\n      border: 1px solid #ccc;\r\n      border-radius: 0.5rem;\r\n      outline: none;\r\n    }\r\n  }\r\n  input[type=\"submit\"] {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CustomDropdown = styled(Dropdown)`\r\n  width: 100%;\r\n  padding: 2px 0;\r\n`;\r\nCustomDropdown.propTypes = Dropdown.propTypes;\r\nCustomDropdown.defaultProps = Dropdown.defaultProps;\r\n\r\nconst CustomDropdownMenu = styled(Dropdown.Menu)`\r\n  width: 100%;\r\n  padding: 0px;\r\n`;\r\nCustomDropdownMenu.propTypes = Dropdown.Menu.propTypes;\r\nCustomDropdownMenu.defaultProps = Dropdown.Menu.defaultProps;\r\n\r\nconst Cities = [\"Mumbai\", \"Delhi\", \"Chennai\", \"Hyderabad\", \"Pune\", \"Bangalore\"];\r\n\r\nconst SelectField = props => {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n  return (\r\n    <Wrapper {...props}>\r\n      <CustomDropdown onSelect={eventKey => {}}>\r\n        <Dropdown.Toggle btnStyle=\"flat\">{props.searchQuery}</Dropdown.Toggle>\r\n        <Dropdown.MenuWrapper>\r\n          <div className=\"input-icon-group dropdown-menu-filter\">\r\n            <form\r\n              onSubmit={e => {\r\n                e.preventDefault();\r\n                props.changeHandler(searchQuery);\r\n              }}\r\n            >\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onChange={e => setSearchQuery(e.target.value)}\r\n              />\r\n              <input type=\"submit\" />\r\n            </form>\r\n          </div>\r\n          <CustomDropdownMenu>\r\n            {Cities.map(city => (\r\n              <MenuItem\r\n                key={city}\r\n                eventKey={city}\r\n                onSelect={() => props.changeHandler(city)}\r\n              >\r\n                {city}\r\n              </MenuItem>\r\n            ))}\r\n          </CustomDropdownMenu>\r\n        </Dropdown.MenuWrapper>\r\n      </CustomDropdown>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  changeHandler: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired\r\n};\r\n\r\nSelectField.defaultProps = {};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  input {\r\n    outline: none;\r\n  }\r\n  input[type=\"search\"] {\r\n    -webkit-appearance: textfield;\r\n    -webkit-box-sizing: content-box;\r\n    font-family: inherit;\r\n    font-size: 100%;\r\n  }\r\n\r\n  input[type=\"search\"] {\r\n    background: url(\"https://static.tumblr.com/ftv85bp/MIXmud4tx/search-icon.png\")\r\n      no-repeat 9.5px 50%;\r\n    border: solid 1px #ccc;\r\n    background-color: #eee;\r\n    padding: 9px 10px 9px 32px;\r\n    border-radius: 50%;\r\n    transition: all 0.5s;\r\n    width: 1.6rem;\r\n    height: 1.6rem;\r\n    padding-left: 10px;\r\n    color: transparent;\r\n    cursor: pointer;\r\n  }\r\n  input[type=\"search\"]:hover {\r\n    background-color: #fff;\r\n  }\r\n  input[type=\"search\"]:focus {\r\n    border-color: #66cc75;\r\n    border-radius: 10em;\r\n    box-shadow: 0 0 5px rgba(109, 207, 246, 0.5);\r\n    width: 130px;\r\n    padding-left: 40px;\r\n    color: #000;\r\n    background-color: #fff;\r\n    cursor: auto;\r\n  }\r\n  input[type=\"search\"]::placeholder {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    text-transform: uppercase;\r\n    font-size: 1.2rem;\r\n    letter-spacing: 3px;\r\n  }\r\n`;\r\n\r\nconst SearchField = props => {\r\n  return (\r\n    <Wrapper {...props}>\r\n      <input\r\n        type=\"search\"\r\n        onChange={e => props.changeHandler(e.target.value)}\r\n        placeholder=\"Search\"\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearchField.propTypes = {\r\n  changeHandler: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ReactTable from \"react-table\";\r\nimport \"react-table/react-table.css\";\r\nimport { IoIosStarOutline } from \"react-icons/io\";\r\nimport { IoIosStar } from \"react-icons/io\";\r\n\r\nconst TableWrapper = styled.div`\r\n  .rt-thead {\r\n    background-color: #3a3a3a;\r\n    color: #fff;\r\n  }\r\n  .rt-tr {\r\n    padding: 1rem;\r\n  }\r\n  .tip {\r\n    text-align: center;\r\n  }\r\n  .favorite {\r\n    text-align: center;\r\n  }\r\n`;\r\nconst Table = props => {\r\n  const { loading, ...restOfProps } = props;\r\n  const processData = () => {\r\n    let bankDetails = [...props.banks];\r\n    bankDetails.forEach(bank => {\r\n      if (props.favBanks.filter(el => el.ifsc === bank.ifsc).length > 0) {\r\n        bank[\"favorite\"] = (\r\n          <div\r\n            className=\"favorite\"\r\n            onClick={() => props.favBanksHandler(bank.ifsc)}\r\n          >\r\n            <IoIosStar />\r\n          </div>\r\n        );\r\n      } else {\r\n        bank[\"favorite\"] = (\r\n          <div\r\n            className=\"favorite\"\r\n            onClick={() => props.favBanksHandler(bank.ifsc)}\r\n          >\r\n            <IoIosStarOutline />\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n    return bankDetails;\r\n  };\r\n  return (\r\n    <TableWrapper {...restOfProps}>\r\n      <ReactTable\r\n        data={processData()}\r\n        columns={[\r\n          {\r\n            Header: \"IFSC\",\r\n            accessor: \"ifsc\"\r\n          },\r\n          {\r\n            Header: \"Bank_ID\",\r\n            accessor: \"bank_id\"\r\n          },\r\n          {\r\n            Header: \"Name\",\r\n            accessor: \"bank_name\"\r\n          },\r\n          {\r\n            Header: \"Address\",\r\n            accessor: \"address\"\r\n          },\r\n          {\r\n            Header: \"Branch\",\r\n            accessor: \"branch\"\r\n          },\r\n          {\r\n            Header: \"City\",\r\n            accessor: \"city\"\r\n          },\r\n          {\r\n            Header: \"District\",\r\n            accessor: \"district\"\r\n          },\r\n          {\r\n            Header: \"State\",\r\n            accessor: \"state\"\r\n          },\r\n          {\r\n            Header: \"Favorite\",\r\n            accessor: \"favorite\"\r\n          }\r\n        ]}\r\n        defaultPageSize={10}\r\n        className=\"-striped -highlight\"\r\n        showPaginationBottom\r\n        loading={loading}\r\n      />\r\n    </TableWrapper>\r\n  );\r\n};\r\n\r\nTable.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  banks: PropTypes.array.isRequired,\r\n  favBanks: PropTypes.array.isRequired,\r\n  favBanksHandler: PropTypes.func.isRequired\r\n};\r\n\r\nTable.defaultProps = {\r\n  loading: false\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { keyframes } from \"styled-components\";\r\nimport { setup } from \"axios-cache-adapter\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nimport SelectField from \"./SelectField/SelectField\";\r\nimport SearchField from \"./SearchField/SearchField\";\r\nimport Table from \"./Table/Table\";\r\n\r\nconst blinkCaret = keyframes`\r\n  from, to { border-color: transparent }\r\n  50% { border-color: orange; }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  color: #000;\r\n  font-family: ${props => props.fontFamily};\r\n  margin: 0 5rem;\r\n  .wrapper {\r\n    .header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      width: 100%;\r\n      .heading {\r\n        font-size: 1.2rem;\r\n        letter-spacing: 3px;\r\n        font-weight: 200;\r\n        text-transform: uppercase;\r\n        overflow: hidden;\r\n        border-right: 0.15em solid orange;\r\n        white-space: nowrap;\r\n        letter-spacing: 0.15em;\r\n        animation: ${blinkCaret} 1s step-end infinite;\r\n      }\r\n    }\r\n    .select {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 2rem auto;\r\n    }\r\n    margin: 3rem auto;\r\n  }\r\n  .tables {\r\n    box-shadow: 0 0 10px #ccc;\r\n    .nav {\r\n      display: flex;\r\n      flex-direction: row;\r\n      .banks,\r\n      .favorites {\r\n        flex: 1;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        letter-spacing: 3px;\r\n        font-size: 1.2rem;\r\n        color: #333;\r\n        font-weight: 200;\r\n        padding: 1.5rem;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .banks {\r\n        background-color: ${props =>\r\n          props.active === \"banks\" ? \"#00a5a5\" : \"#eee\"};\r\n        color: ${props => (props.active === \"banks\" ? \"#fff\" : \"#000\")};\r\n      }\r\n\r\n      .favorites {\r\n        background-color: ${props =>\r\n          props.active === \"favorites\" ? \"#00a5a5\" : \"#eee\"};\r\n        color: ${props => (props.active === \"favorites\" ? \"#fff\" : \"#000\")};\r\n      }\r\n\r\n      .banks:hover,\r\n      .favorites:hover {\r\n        transition: all 0.4s;\r\n        background-color: #00a5a5;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst api = setup({\r\n  baseURL: \"https://vast-shore-74260.herokuapp.com\",\r\n  cache: {\r\n    maxAge: 15 * 60 * 1000,\r\n    exclude: {\r\n      query: false\r\n    }\r\n  }\r\n});\r\n\r\nclass Landing extends Component {\r\n  state = {\r\n    banks: [],\r\n    filteredBanks: [],\r\n    selectQuery: \"MUMBAI\",\r\n    loading: true,\r\n    favBanks: [],\r\n    activeTab: \"banks\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    api\r\n      .get(\"/banks?city=MUMBAI\")\r\n      .then(res =>\r\n        this.setState({\r\n          banks: res.data,\r\n          filteredBanks: res.data,\r\n          loading: false,\r\n          favBanks: JSON.parse(localStorage.getItem(\"favBanks\") || \"[]\")\r\n        })\r\n      )\r\n      .catch(err =>\r\n        toast.error(\"Something's Not Right!\", {\r\n          position: toast.POSITION.TOP_RIGHT\r\n        })\r\n      );\r\n  };\r\n\r\n  queryCheckHandler = (query, bank) => {\r\n    if (\r\n      bank.ifsc.toLowerCase().startsWith(query) ||\r\n      String(bank.bank_id).startsWith(query) ||\r\n      bank.branch.toLowerCase().startsWith(query) ||\r\n      bank.address.toLowerCase().startsWith(query) ||\r\n      bank.city.toLowerCase().startsWith(query) ||\r\n      bank.district.toLowerCase().startsWith(query) ||\r\n      bank.state.toLowerCase().startsWith(query) ||\r\n      bank.bank_name.toLowerCase().startsWith(query)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  searchChangeHandler = query => {\r\n    const lowerCaseQuery = query.toLowerCase();\r\n    const filteredBanks = this.state.banks.filter(bank =>\r\n      this.queryCheckHandler(lowerCaseQuery, bank)\r\n    );\r\n    this.setState({ filteredBanks: filteredBanks });\r\n  };\r\n\r\n  selectChangeHandler = option => {\r\n    this.setState({ selectQuery: option.toUpperCase(), loading: true });\r\n    api\r\n      .get(`/banks?city=${option.toUpperCase()}`)\r\n      .then(res =>\r\n        this.setState({\r\n          banks: res.data,\r\n          filteredBanks: res.data,\r\n          loading: false\r\n        })\r\n      )\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  favBanksHandler = ifsc => {\r\n    let fav = JSON.parse(localStorage.getItem(\"favBanks\") || \"[]\");\r\n\r\n    if (fav.filter(el => ifsc === el.ifsc).length > 0) {\r\n      fav = fav.filter(el => ifsc !== el.ifsc);\r\n    } else {\r\n      const bank = this.state.banks.filter(el => el.ifsc === ifsc);\r\n      fav = [...fav, bank[0]];\r\n    }\r\n    fav.forEach(bank => delete bank.favorite);\r\n    localStorage.setItem(\"favBanks\", JSON.stringify(fav));\r\n    this.setState({ favBanks: fav });\r\n  };\r\n\r\n  switchTabHandler = tab => {\r\n    this.setState({\r\n      activeTab: tab\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const tableToShow =\r\n      this.state.activeTab === \"banks\" ? (\r\n        <Table\r\n          favBanks={this.state.favBanks}\r\n          banks={this.state.filteredBanks}\r\n          loading={this.state.loading}\r\n          favBanksHandler={this.favBanksHandler}\r\n        />\r\n      ) : (\r\n        <Table\r\n          favBanks={this.state.favBanks}\r\n          banks={this.state.favBanks}\r\n          loading={false}\r\n          favBanksHandler={this.favBanksHandler}\r\n        />\r\n      );\r\n    return (\r\n      <Wrapper active={this.state.activeTab}>\r\n        <div className=\"wrapper\">\r\n          <div className=\"header\">\r\n            <div className=\"heading\">Banks Search App</div>\r\n            <SearchField changeHandler={this.searchChangeHandler} />\r\n          </div>\r\n          <div className=\"select\">\r\n            <div>City:&nbsp;&nbsp;</div>\r\n            <SelectField\r\n              changeHandler={this.selectChangeHandler}\r\n              searchQuery={this.state.selectQuery}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"tables\">\r\n          <div className=\"nav\">\r\n            <div\r\n              className=\"banks\"\r\n              onClick={() => this.switchTabHandler(\"banks\")}\r\n            >\r\n              Banks\r\n            </div>\r\n            <div\r\n              className=\"favorites\"\r\n              onClick={() => this.switchTabHandler(\"favorites\")}\r\n            >\r\n              Favorites\r\n            </div>\r\n          </div>\r\n          {tableToShow}\r\n        </div>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Landing from \"./components\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure({\n  autoClose: 5000\n});\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route path=\"/\" component={Landing} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}