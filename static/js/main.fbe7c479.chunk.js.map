{"version":3,"sources":["components/Dropdown/index.js","components/SelectField/SelectField.js","components/SearchField/SearchField.js","components/Table/Table.js","components/index.js","App.js","serviceWorker.js","index.js"],"names":["Dropdown","Wrapper","styled","div","CustomDropdown","propTypes","defaultProps","CustomDropdownToggle","Toggle","CustomDropdownMenuWrapper","MenuWrapper","Menu","CustomDropdownMenu","CustomMenuItem","MenuItem","SelectField","props","React","useState","searchQuery","setSearchQuery","onSelect","eventKey","btnStyle","className","onSubmit","e","preventDefault","changeHandler","type","placeholder","onChange","target","value","SearchField","TableWrapper","Table","banks","map","bank","key","ifsc","bank_id","bank_name","address","branch","city","district","state","fontFamily","api","setup","baseURL","cache","maxAge","Landing","filteredBanks","selectQuery","componentDidMount","get","then","res","setState","data","catch","err","console","log","queryCheckHandler","query","toLowerCase","startsWith","String","searchChangeHandler","lowerCaseQuery","filter","selectChangeHandler","option","toUpperCase","this","Component","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbe7c479.chunk.js","sourcesContent":["import \"@trendmicro/react-dropdown/dist/react-dropdown.css\";\r\nimport Dropdown from \"@trendmicro/react-dropdown\";\r\nimport \"../Buttons\";\r\n\r\nexport default Dropdown;\r\nexport {\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownMenuWrapper,\r\n  MenuItem,\r\n  DropdownButton\r\n} from \"@trendmicro/react-dropdown\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Dropdown, { MenuItem } from \"../Dropdown\";\r\n\r\nconst Wrapper = styled.div`\r\n  input[type=\"submit\"] {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst CustomDropdown = styled(Dropdown)`\r\n  padding: 2px 0;\r\n`;\r\nCustomDropdown.propTypes = Dropdown.propTypes;\r\nCustomDropdown.defaultProps = Dropdown.defaultProps;\r\n\r\nconst CustomDropdownToggle = styled(Dropdown.Toggle)``;\r\nCustomDropdownToggle.propTypes = Dropdown.Toggle.propTypes;\r\nCustomDropdownToggle.defaultProps = Dropdown.Toggle.defaultProps;\r\n\r\nconst CustomDropdownMenuWrapper = styled(Dropdown.MenuWrapper)``;\r\nCustomDropdownMenuWrapper.propTypes = Dropdown.Menu.propTypes;\r\nCustomDropdownMenuWrapper.defaultProps = Dropdown.Menu.defaultProps;\r\n\r\nconst CustomDropdownMenu = styled(Dropdown.Menu)``;\r\nCustomDropdownMenu.propTypes = Dropdown.Menu.propTypes;\r\nCustomDropdownMenu.defaultProps = Dropdown.Menu.defaultProps;\r\n\r\nconst CustomMenuItem = styled(MenuItem)``;\r\nCustomMenuItem.propTypes = MenuItem.propTypes;\r\nCustomMenuItem.defaultProps = MenuItem.defaultProps;\r\n\r\nconst SelectField = props => {\r\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\r\n  return (\r\n    <Wrapper {...props}>\r\n      <CustomDropdown onSelect={eventKey => {}}>\r\n        <CustomDropdownToggle btnStyle=\"flat\">\r\n          {props.searchQuery}\r\n        </CustomDropdownToggle>\r\n        <CustomDropdownMenuWrapper>\r\n          <div className=\"input-icon-group dropdown-menu-filter\">\r\n            <form\r\n              onSubmit={e => {\r\n                e.preventDefault();\r\n                props.changeHandler(searchQuery);\r\n              }}\r\n            >\r\n              <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onChange={e => setSearchQuery(e.target.value)}\r\n              />\r\n              <input type=\"submit\" />\r\n            </form>\r\n          </div>\r\n          <CustomDropdownMenu>\r\n            <CustomMenuItem\r\n              eventKey={\"Mumbai\"}\r\n              onSelect={() => props.changeHandler(\"Mumbai\")}\r\n            >\r\n              Mumbai\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              eventKey={\"Delhi\"}\r\n              onSelect={() => props.changeHandler(\"Delhi\")}\r\n            >\r\n              Delhi\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              eventKey={\"Chennai\"}\r\n              onSelect={() => props.changeHandler(\"Chennai\")}\r\n            >\r\n              Chennai\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              eventKey={\"Kolkata\"}\r\n              onSelect={() => props.changeHandler(\"Kolkata\")}\r\n            >\r\n              Kolkata\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              eventKey={\"Hyderabad\"}\r\n              onSelect={() => props.changeHandler(\"Hyderabad\")}\r\n            >\r\n              Hyderabad\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              eventKey={\"Bangaluru\"}\r\n              onSelect={() => props.changeHandler(\"Bengaluru\")}\r\n            >\r\n              Bangaluru\r\n            </CustomMenuItem>\r\n            <CustomMenuItem\r\n              eventKey={\"Pune\"}\r\n              onSelect={() => props.changeHandler(\"Pune\")}\r\n            >\r\n              Pune\r\n            </CustomMenuItem>\r\n          </CustomDropdownMenu>\r\n        </CustomDropdownMenuWrapper>\r\n      </CustomDropdown>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSelectField.propTypes = {\r\n  changeHandler: PropTypes.func.isRequired,\r\n  searchQuery: PropTypes.string.isRequired\r\n};\r\n\r\nSelectField.defaultProps = {};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  input {\r\n    outline: none;\r\n  }\r\n  input[type=\"search\"] {\r\n    -webkit-appearance: textfield;\r\n    -webkit-box-sizing: content-box;\r\n    font-family: inherit;\r\n    font-size: 100%;\r\n  }\r\n  input::-webkit-search-decoration,\r\n  input::-webkit-search-cancel-button {\r\n    display: none;\r\n  }\r\n\r\n  input[type=\"search\"] {\r\n    background: url(\"https://static.tumblr.com/ftv85bp/MIXmud4tx/search-icon.png\")\r\n      no-repeat 10px 50%;\r\n    border: solid 1px #ccc;\r\n    padding: 9px 10px 9px 32px;\r\n    width: 10rem;\r\n\r\n    -webkit-border-radius: 10em;\r\n    -moz-border-radius: 10em;\r\n    border-radius: 10em;\r\n\r\n    -webkit-transition: all 0.5s;\r\n    -moz-transition: all 0.5s;\r\n    transition: all 0.5s;\r\n  }\r\n  input[type=\"search\"]:focus {\r\n    width: 20rem;\r\n    background-color: #fff;\r\n    border-color: #66cc75;\r\n\r\n    -webkit-box-shadow: 0 0 5px rgba(109, 207, 246, 0.5);\r\n    -moz-box-shadow: 0 0 5px rgba(109, 207, 246, 0.5);\r\n    box-shadow: 0 0 5px rgba(109, 207, 246, 0.5);\r\n  }\r\n\r\n  input:-moz-placeholder {\r\n    color: #999;\r\n  }\r\n  input::-webkit-input-placeholder {\r\n    color: #999;\r\n  }\r\n`;\r\n\r\nconst SearchField = props => {\r\n  return (\r\n    <Wrapper {...props}>\r\n      <input\r\n        type=\"search\"\r\n        onChange={e => props.changeHandler(e.target.value)}\r\n        placeholder=\"Search\"\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TableWrapper = styled.div`\r\n  table {\r\n    thead {\r\n      color: #fff;\r\n      background-color: #313131;\r\n    }\r\n    tbody {\r\n      font-size: 1.4rem;\r\n    }\r\n    th,\r\n    td {\r\n      font-weight: 500;\r\n      padding: 15px;\r\n      text-align: left;\r\n      max-width: 20rem;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Table = props => {\r\n  return (\r\n    <TableWrapper {...props}>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>IFSC</th>\r\n            <th>Bank_ID</th>\r\n            <th>Name</th>\r\n            <th>Address</th>\r\n            <th>Branch</th>\r\n            <th>City</th>\r\n            <th>District</th>\r\n            <th>State</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {props.banks.map(bank => {\r\n            return (\r\n              <tr key={bank.ifsc}>\r\n                <th>{bank.ifsc}</th>\r\n                <th>{bank.bank_id}</th>\r\n                <th>{bank.bank_name}</th>\r\n                <th>{bank.address}</th>\r\n                <th>{bank.branch}</th>\r\n                <th>{bank.city}</th>\r\n                <th>{bank.district}</th>\r\n                <th>{bank.state}</th>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </TableWrapper>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { setup } from \"axios-cache-adapter\";\r\n\r\nimport SelectField from \"./SelectField/SelectField\";\r\nimport SearchField from \"./SearchField/SearchField\";\r\nimport Table from \"./Table/Table\";\r\n\r\nconst Wrapper = styled.div`\r\n  color: #000;\r\n  font-family: ${props => props.fontFamily};\r\n  .wrapper {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    margin: 3rem auto;\r\n  }\r\n`;\r\n\r\nconst api = setup({\r\n  baseURL: \"https://vast-shore-74260.herokuapp.com\",\r\n  cache: {\r\n    maxAge: 15 * 60 * 1000\r\n  }\r\n});\r\n\r\nclass Landing extends Component {\r\n  state = {\r\n    banks: [],\r\n    filteredBanks: [],\r\n    selectQuery: \"MUMBAI\"\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    api\r\n      .get(\"/banks?city=MUMBAI\")\r\n      .then(res => this.setState({ banks: res.data, filteredBanks: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  queryCheckHandler = (query, bank) => {\r\n    if (\r\n      bank.ifsc.toLowerCase().startsWith(query) ||\r\n      String(bank.bank_id).startsWith(query) ||\r\n      bank.branch.toLowerCase().startsWith(query) ||\r\n      bank.address.toLowerCase().startsWith(query) ||\r\n      bank.city.toLowerCase().startsWith(query) ||\r\n      bank.district.toLowerCase().startsWith(query) ||\r\n      bank.state.toLowerCase().startsWith(query) ||\r\n      bank.bank_name.toLowerCase().startsWith(query)\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  searchChangeHandler = query => {\r\n    const lowerCaseQuery = query.toLowerCase();\r\n    const filteredBanks = this.state.banks.filter(bank =>\r\n      this.queryCheckHandler(lowerCaseQuery, bank)\r\n    );\r\n    this.setState({ filteredBanks: filteredBanks });\r\n  };\r\n\r\n  selectChangeHandler = option => {\r\n    this.setState({ selectQuery: option.toUpperCase() });\r\n    api\r\n      .get(`/banks?city=${option.toUpperCase()}`)\r\n      .then(res => this.setState({ banks: res.data, filteredBanks: res.data }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Wrapper>\r\n        <div className=\"wrapper\">\r\n          <SelectField\r\n            changeHandler={this.selectChangeHandler}\r\n            searchQuery={this.state.selectQuery}\r\n          />\r\n          <SearchField changeHandler={this.searchChangeHandler} />\r\n        </div>\r\n        <Table banks={this.state.filteredBanks} />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {};\r\n\r\nLanding.defaultProps = {};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, BrowserRouter } from \"react-router-dom\";\nimport Landing from \"./components\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Route path=\"/\" component={Landing} />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}